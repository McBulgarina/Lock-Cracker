#include <iostream>
#include <string>
#include <list>
#include <cmath>
#include <cstdlib>
#include <random>

using namespace std;

static 	int passwordLength;
static string generatedPassword;

static bool UseSpecialCharacters;
static bool UseNumbers;
static bool UseUppercaseLetters;

static void TestPasswordStrength()
{
	// Functionality to be implemented
}

static void GeneratePassword()
{
	if (passwordLength == 0)
	{
		cout << "Set password preferences first (choose option 2)." << endl;
		return;
	}

	const string lowercase = "abcdefghijklmnopqrstuvwxyz";
	const string uppercase = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
	const string numbers = "0123456789";
	const string specials = "!@#$%^&*()_+-=[]{}|;:',.<>?/`~";

	string pool = lowercase;
	if (UseUppercaseLetters) pool += uppercase;
	if (UseNumbers) pool += numbers;
	if (UseSpecialCharacters) pool += specials;

	// RNG: single engine
	static std::mt19937 rng((std::random_device())());
	std::uniform_int_distribution<size_t> dist(0, pool.size() - 1);

	generatedPassword.clear();
	generatedPassword.reserve(passwordLength);

	for (int i = 0; i < passwordLength; ++i)
	{
		char c;
		do
		{
			c = pool[dist(rng)];
		} while (generatedPassword.size() >= 2 &&
			generatedPassword[generatedPassword.size() - 1] == c &&
			generatedPassword[generatedPassword.size() - 2] == c);

		generatedPassword.push_back(c);
	}

	cout << "Generated password: " << generatedPassword << endl;
}

static void help()
{
	cout << "This program generates a random password based on user-defined preferences." << endl;
	cout << "You will be prompted to enter the desired password length (between 8 and 64 characters)." << endl;
	cout << "You can choose to include special characters, numbers, and uppercase letters in your password." << endl;
	cout << "Based on your preferences, the program will generate a secure password for you." << endl;
}

static void UserPreferences()
{
	bool validInput = false;

	cin >> std::boolalpha;
	while (!validInput)
	{
		cout << "Enter the desired password length (8 - 64): ";
		cin >> passwordLength;
		if (passwordLength < 8 || passwordLength >64)
		{
			cout << "The password length must be between 8 and 64 characters. Please enter a valid number" << endl;
		}
		else
		{
			validInput = true;
		}
	}
	cout << "Do you want to inlude special characters (true/false): ";
	cin >> UseSpecialCharacters;
	cout << "Do you want to include numbers (true/false): ";
	cin >> UseNumbers;
	cout << "Do you want to include uppercase letters (true/false): ";
	cin >> UseUppercaseLetters;
	cout << "Password preferences set successfully." << endl;
	GeneratePassword();
}

int main()
{
	cout << "  Welcome to Lock Cracker!  Made by Anton Kirichev" << endl;
	cout << endl;
	cout << "----------------------------------------------------";
	bool exit = false;
	while (!exit)
	{
		cout << endl;
		cout << "Select action:\n1. Help\n2. Password preferences\n3. Generate a password\n4. Test password strength" << endl;
		int choice;
		cin >> choice;
		switch (choice)
		{
		case 1:
			help();
			break;
		case 2:
			UserPreferences();
			break;
		case 3:
			GeneratePassword();
			break;
		case 4:
			TestPasswordStrength();
			break;
		}
		return 0;
	}
}
